# Define all component group variable
kube_version: 1.6.1 # support 1.4.0+ for source type

# Install available type: package, source
docker_install_type: "package" # package type only support latest version
kube_install_type: "source" # package type only support latest version

# Kubernetes system images
api_image: "gcr.io/google_containers/kube-apiserver-amd64:v{{ kube_version }}"
controller_image: "gcr.io/google_containers/kube-controller-manager-amd64:v{{ kube_version }}"
scheduler_image: "gcr.io/google_containers/kube-scheduler-amd64:v{{ kube_version }}"
haproxy_image: haproxy:1.7
keepalived_image: kairen/keepalived:1.2.24

# Kubernetes add-ons images
kube_proxy_image: gcr.io/google_containers/kube-proxy-amd64:v1.6.1
kube_dash_image: gcr.io/google_containers/kubernetes-dashboard-amd64:v1.6.0
kube_dns_image: gcr.io/google_containers/kubedns-amd64:1.9
kube_dnsmasq_image: gcr.io/google_containers/kube-dnsmasq-amd64:1.4
kube_healthz_image: gcr.io/google_containers/exechealthz-amd64:1.2

# Kubernetes cluster network
cluster_subnet: 192.160.0
kubernetes_service_ip: "{{ cluster_subnet }}.1"
service_ip_range: "{{ cluster_subnet }}.0/12"
service_node_port_range: 30000-32767

# Set if you want to access kubernetes cluster via load balancer
lb_vip_address: 172.16.35.9
lb_api_url: "https://{{ lb_vip_address }}"
api_secure_port: 5443

# SSL cert handler, it should be true during ansible first run
sslcert_create: true

# All master fqdn name - it require to create ssl certificate
# Set it to only available api server
masters_fqdn: ['kube.master1.com',]

# A list of insecure registrys you might need to define
insecure_registrys:
# - "gcr.io"

# Etcd variable
etcd_domain_name: test.com # use to create wildcard ssl certificate for api and etcd
etcd_peer_url_scheme: http # http / https

# Network implementation('flannel', 'weave', 'calico')
networking: flannel

# kube-dash addon (https://github.com/kubernetes/dashboard)
kube_dash: true  # turn to false to disable

# kube-dns addon
kube_dns: true # turn to false to disable
dns_name: cluster.local # cluster dns name
dns_ip: "{{ cluster_subnet }}.10"

# kube-proxy addon
kube_proxy: true # turn to false to disable
kube_proxy_mode: iptables # it should be "iptables",
                          # but if you want to deploy ceph on kubernetes,
                          # you must set to "userspace"
# kube-logging addon
kube_logging: false # turn to true to enable

# kube-monitoring addon
kube_monitoring: false # turn to true to enable

# Weave scope ui
weave_scope_ui: false # turn to true to enable

# Define all component group variable
kube_version: 1.6.1 # support 1.4.0+ for source type

# Install available type: package, source
docker_install_type: "source" # package type only support latest version
kube_install_type: "source" # package type only support latest version

# Kubernetes system images
api_image: gcr.io/google_containers/kube-apiserver-amd64:v1.6.1
controller_image: gcr.io/google_containers/kube-controller-manager-amd64:v1.6.1
scheduler_image: gcr.io/google_containers/kube-scheduler-amd64:v1.6.1
haproxy_image: haproxy:1.7
keepalived_image: kairen/keepalived:1.2.24

# Kubernetes add-ons images
kube_proxy_image: gcr.io/google_containers/kube-proxy-amd64:v1.6.1
kube_dash_image: gcr.io/google_containers/kubernetes-dashboard-amd64:v1.6.0
kube_dns_image: gcr.io/google_containers/kubedns-amd64:1.9

# Kubernetes cluster network
kubernetes_service_ip: 192.160.0.1
service_ip_range: 192.160.0.0/12
service_node_port_range: 30000-32767

# Set if you want to access kubernetes cluster via load balancer
lb_vip_address: 172.16.35.9
lb_api_url: https://172.16.35.9
api_secure_port: 5443

# SSL cert handler, it should be true during ansible first run
sslcert_create: true

# All master fqdn name - it require to create ssl certificate
# Set it to only available api server
masters_fqdn: ['kube.master1.com',]

# A list of insecure registrys you might need to define
insecure_registrys:
# - "gcr.io"

# Etcd variable
etcd_domain_name: test.com # use to create wildcard ssl certificate for api and etcd
etcd_version: 3.1.5 # etcd version, support 2.1.0+
etcd_peer_url_scheme: http # http / https

# Flannel network (only one network plugin run on cluster)
flannel: true # turn to false to disable
flannel_version: 0.7.0 # flannel version, support 0.5.5+
flannel_key: /atomic.io/network
flannel_subnet: 172.16.0.0 # flannel subnet range
flannel_prefix: 16
flannel_host_prefix: 24
flannel_backend: vxlan # overlay network type
flannel_opts: "" # when use vagrant to deploy, you should set to "--iface=enp0s8"

# Weave network (only one network plugin run on cluster)
weave_net: false # turn to true to enable
weaveui_port: 90
weaveui_ip: 172.16.35.9 # it should be one of cluster node IP

# kube-dash addon (https://github.com/kubernetes/dashboard)
kube_dash: true  # turn to false to disable
kube_dash_ip: 172.16.35.9 # it should be one of cluster node IP
kube_dash_port: 80

# kube-dns addon
kube_dns: true # turn to false to disable
dns_name: cluster.local # cluster dns name
dns_ip: 192.160.0.10 # it should be from cluster service_ip_range
dns_replicas: 1

# kube-proxy addon
kube_proxy: true # turn to false to disable
kube_proxy_mode: iptables # it should be "iptables",
                          # but if you want to deploy ceph on kubernetes,
                          # you must set to "userspace"

# kube-logging addon
kube_logging: false # turn to true to enable
logging_ip: 172.16.35.9 # it should be one of cluster node IP
kibana_port: 5601
elasticsearch_port: 9200

# kube-monitoring addon
kube_monitoring: false # turn to true to enable
monitoring_ip: 172.16.35.9
heapster_ip: 192.160.0.11 # it should be from cluster service_ip_range
heapster_port: 80
grafana_port: 100
influx_port: 8086

# Component directory path
bin_dir: /usr/bin
service_dir: /etc/systemd/system
config_dir: /etc/sysconfig
kube_config_dir: /etc/kubernetes
manifest_config_dir: /etc/kubernetes/manifests
cert_dir: /etc/kubernetes/pki
master_cert_dir: /opt/kubernetes/pki
kube_addon_dir: /etc/kubernetes/addon
weave_dir: /etc/cni/net.d
ceph_dir: /etc/ceph

# Cluster certifactes file path
account_key: /etc/kubernetes/pki/apiserver-key.pem
ca_cert: /etc/kubernetes/pki/ca.pem
ca_key: /etc/kubernetes/pki/ca-key.pem
api_cert: /etc/kubernetes/pki/apiserver.pem
api_key: /etc/kubernetes/pki/apiserver-key.pem
admin_key: /etc/kubernetes/pki/admin-key.pem
admin_cert: /etc/kubernetes/pki/admin.pem
node_cert: /etc/kubernetes/pki/node.pem
node_key: /etc/kubernetes/pki/node-key.pem

# Kubeconfig file path
kubelet_config: /etc/kubernetes/kubelet.conf
kubeadmin_config: /etc/kubernetes/admin.conf

# Etcd certificate file path
etcd_ca_file: /etc/kubernetes/pki/ca.pem
etcd_cert_file: /etc/kubernetes/pki/etcd.pem
etcd_key_file: /etc/kubernetes/pki/etcd-key.pem
etcd_peer_ca_file: /etc/kubernetes/pki/ca.pem
etcd_peer_cert_file: /etc/kubernetes/pki/etcd.pem
etcd_peer_key_file: /etc/kubernetes/pki/etcd-key.pem

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: heapster
  namespace: kube-system
  labels:
    k8s-app: heapster
    kubernetes.io/cluster-service: "true"
    version: v1.3.0
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: heapster
      version: v1.3.0
  template:
    metadata:
      labels:
        k8s-app: heapster
        version: v1.3.0
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
        scheduler.alpha.kubernetes.io/tolerations: '[{"key":"CriticalAddonsOnly", "operator":"Exists"}]'
    spec:
      containers:
        - name: "{{ images.heapster.name }}"
          image: "{{ images.heapster.repos }}{{ images.heapster.name }}:{{ images.heapster.tag }}"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8082
              scheme: HTTP
            initialDelaySeconds: 180
            timeoutSeconds: 5
          command:
            - /heapster
            - --source=kubernetes.summary_api:''
            - --sink=influxdb:http://{{ monitoring_ip }}:{{ influx_port }}
---
kind: Service
apiVersion: v1
metadata:
  name: heapster
  namespace: kube-system
  labels:
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: "Heapster"
spec:
  selector:
    k8s-app: heapster
  ports:
  - port: {{ heapster_port }}
    targetPort: 8082
  clusterIP: {{ heapster_ip }}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
  name: influxdb-grafana
  namespace: kube-system
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: heapster-grafana
        kubernetes.io/cluster-service: "true"
    spec:
      containers:
      - name: "{{ images.hp_influx.name }}"
        image: "{{ images.hp_influx.repos }}{{ images.hp_influx.name }}:{{ images.hp_influx.tag }}"
        volumeMounts:
        - mountPath: /data
          name: influxdb-persistent-storage
      - name: "{{ images.hp_grafana.name }}"
        image: "{{ images.hp_grafana.repos }}{{ images.hp_grafana.name }}:{{ images.hp_grafana.tag }}"
        env:
          - name: INFLUXDB_SERVICE_URL
            value: http://{{ monitoring_ip }}:{{ influx_port }}
        volumeMounts:
        - name: grafana-persistent-storage
          mountPath: /var
      volumes:
      - name: influxdb-persistent-storage
        emptyDir: {}
      - name: grafana-persistent-storage
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
     kubernetes.io/cluster-service: 'true'
     kubernetes.io/name: 'Grafana'
     addonmanager.kubernetes.io/mode: Reconcile
  name: monitoring-grafana
  namespace: kube-system
spec:
   ports:
   - port: {{ grafana_port }}
     targetPort: 3000
   selector:
      name: heapster-grafana
   type: LoadBalancer
   externalIPs:
   - {{ monitoring_ip }}
---
apiVersion: v1
kind: Service
metadata:
   labels:
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: "InfluxDB"
      addonmanager.kubernetes.io/mode: Reconcile
   name: monitoring-influxdb
   namespace: kube-system
spec:
   ports:
   - name: http
     port: 8083
     targetPort: 8083
   - name: api
     port: {{ influx_port }}
     targetPort: 8086
   selector:
      name: heapster-grafana
   type: LoadBalancer
   externalIPs:
   - {{ monitoring_ip }}

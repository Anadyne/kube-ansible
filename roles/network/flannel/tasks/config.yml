---

- name: Set facts about etcdctl command
  set_fact:
    peers: "{% for node in groups['etcd'] %}{{ etcd_peer_url_scheme }}://{{ node }}:2379{% if not loop.last %},{% endif %}{% endfor %}"
    conf_file: "/tmp/flannel-config.json"
    conf_loc: "/{{ flannel_key }}/config"
  run_once: true
  delegate_to: "{{ groups['etcd'][0] }}"

- name: Copy Flannel network Etcd config file
  template: src=flannel-config.json.j2 dest={{ conf_file }}
  run_once: true
  delegate_to: "{{ groups['etcd'][0] }}"

- name: Copy Etcd certificate from ansible host
  when: etcd_peer_url_scheme == 'https'
  copy: src={{ cert_dir }} dest={{ kube_etc_dir }}

- name: Load the Flannel network config into Etcd (http)
  when: etcd_peer_url_scheme == 'http'
  shell: |
    /usr/bin/etcdctl --no-sync \
                     --peers={{ peers }} \
                     set {{ conf_loc }} < {{ conf_file }}
  run_once: true
  delegate_to: "{{ groups['etcd'][0] }}"

- name: Load the Flannel network config into Etcd (https)
  when: etcd_peer_url_scheme == 'https'
  shell: |
    /usr/bin/etcdctl --cert-file={{ etcd_peer_cert_file }} \
                     --ca-file={{ etcd_peer_ca_file }} \
                     --key-file={{ etcd_peer_key_file }} \
                     --no-sync --peers={{ peers }} \
                     set {{ conf_loc }} < {{ conf_file }}
  run_once: true
  delegate_to: "{{ groups['etcd'][0] }}"

- name: Create Flannel network symlinks
  file:
    src: "{{ downloads.flannel.dir }}/{{ item }}"
    dest: "/usr/bin/{{ item }}"
    state: link
    force: yes
  with_items:
    - flanneld
    - mk-docker-opts.sh
